// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String    @id @default(cuid())
    email           String?   @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]

    name            String?
    age             Int
    location        String?
    lastActive      DateTime
    avgRespTime     Int @default(0)
    numResponses    Int @default(0)
    printerProfile  PrinterProfile? 
}

model PrinterProfile {
  // These are for printers, if the user isn't a printer, empty
  user          User? @relation(fields: [userId], references: [id])
  userId        String @unique
  printTime     PrintTime @default(DESIGNER)
  colorType     ColorType @default(DESIGNER)
	points        Int @default(0)
  colors        String[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}




enum PrintTime {
  DESIGNER
  LOW
  MED
  HI
}

enum ColorType {
  DESIGNER
  SINGLE
  LAYERED
  FULL
}
